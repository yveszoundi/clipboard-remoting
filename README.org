#+TITLE: README

* What is this?

A *quick and very dirty* clipboard exchange solution over a network, built out of unwarranted frustration.
- I wasn't able to get [[https://en.wikipedia.org/wiki/QEMU][QEMU]] [[https://gitlab.freedesktop.org/spice/spice/-/issues/39][spice support]] ready to go for MacOS after few hours, nor did I want to implement more involved solutions
- Even though, I managed later to fix =spice related= compilation issues, I don't think that I'll enable spice support or change my current workflow

This is more or less how it works
[[./images/diagram.png]]

*Please do not use for anything sensitive!*

* How is this being used?

I leverage this tool mostly within Linux virtual machines running a tiling window manager ([[https://en.wikipedia.org/wiki/Dwm][dwm]], etc.).

On the machine where I'm copying text from:
- =C-c= pushes selected text to the local machine clipboard
- =C-t Shift-C-c= sends the local machine clipboard contents to the remote clipboard server (in =dwm=)

On the target machine, where I want to paste text:
- =C-t Shit-v= reads the remote clipboard server contents and puts it in the local machine clipboard (in =dwm=)
- =C-v= pastes the newly fetched remote clipboard contents

* What is required?

- *Operating System*: Linux, MacOS, Windows, BSD
- A rust compiler and the cargo build tool

  /Please note that the graphical user interface doesn't build under BSD yet, you can only use the command-line client/.

* What is potentially next?

- [ ] Standard message format (JSON, XML, etc.)
- [ ] Standard communication protocol (RPC, REST, etc.)
- [ ] SSL support
- [ ] Rethink communication model (agent, actor)
- [ ] Rethink the main purpose of this project
  - Passing simple plain text?
  - More complete features such as clipboard history, etc.
  
  
