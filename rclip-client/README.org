#+TITLE: rclip-client README

* What is this?

This is the command-line client and it's been tested under Linux and MacOs.

* What is required?

- *Operating System*: Linux or MacOS. Windows and BSD systems haven't been tested yet.
- A rust compiler and the cargo build tool

* How to build this?

At the root of this project, open a command prompt and type =cargo build=.

* How to run this?

Please refer to the top level folder for desktop or command-line screenshots.

** Desktop user interface

*This merely exists for very occasional usage under MacOS, where I do not run a tiling window manager*.
The ideal workflow is interacting with the command-line application via keyboard shortcuts that mimic closely "standard" copy-paste keyboard shortcuts.

[[./images/screenshot_gui.png]]

** Command-line user interface

*** Display help

#+begin_src sh
./target/debug/rclip-cli --help
#+end_src

*** Read contents from the clipboard server

In the example below =copytext.sh= is a simple custom shell script piping data over to xclip. Without "hacks", on x11 the clipboard contents are lost if the program exits
- That applies to CLI applications that exit immediately
- I could implement a basic Desktop client, it's not ideal for most workflows within a tiling window manager (heavy on keyboard shortcuts).

#+begin_src sh
  ./target/debug/rclip-cli --clipboard-program /home/vip/copytext.sh
#+end_src

Here are the contents of the above-mentioned =copytext.sh=.

#+begin_src sh
  echo -n $1 | xclip -sel clip
#+end_src

*** Write contents to the clipboard server

#+begin_src sh
  ./target/debug/rclip-cli --command WRITE --text new_clipboard_contents
#+end_src
