#+TITLE: rclip-client README

* What is this?

This is the command-line client and it's been tested under various Linux distributions, BSD, MacOS and Windows (10 & 11).

* What is required?

- *Operating System*: Linux, MacOS. Minimal testing for Windows so far and pending checks for BSD distributions.
- *Build Tools*: A rust compiler and the cargo build tool.
- *Tools and Libraries under Linux*: curl, pango-dev, cairo-dev, libXcursor-dev (TBD update this list...).
- *X11* under Linux and BSD platforms: specialized code was added for [[https://unix.stackexchange.com/questions/450508/how-to-keep-clipboard-content-from-xterm-after-closing-it-like-firefox-or-le][clipboard persistence]] mitigation.

* How to build this?

** MacOS, Linux and Windows

#+begin_src sh
  cargo build
#+end_src

** FreeBSD, NetBSD and OpenBSD

The GUI is not available for BSD operating systems (FLTK UI toolkit compilation issues).

#+begin_src sh
  cargo build --bin rclip-client-cli
#+end_src

* How to run this?

Please refer to the top level folder for desktop or command-line screenshots.

** Desktop user interface

*This merely exists for very occasional usage under MacOS, where I do not run a tiling window manager*.
The ideal workflow is interacting with the command-line version via keyboard shortcuts.

[[./images/screenshot_gui.png]]

** Command-line user interface

*** Display help

Pass the =--help= flag for an exhaustive list of command-line options

#+begin_src sh
./target/debug/rclip-client-cli --help
#+end_src

*** Read contents from the clipboard server

Without any arguments, the following flags are defaulted.

|-------------+---------------|
| Flag        | Default Value |
|-------------+---------------|
| =--command= | =READ=        |
| =--host=    | =127.0.0.1=   |
| =--port=    | =10080=       |
|-------------+---------------|

#+begin_src sh
./target/debug/rclip-client-cli --der-cert-pub path_to_public_key_file_here.der
#+end_src

*** Write contents to the clipboard server

**** With specific text

#+begin_src sh
  ./target/debug/rclip-client-cli --command WRITE --text new_clipboard_contents --der-cert-pub pub_key_file_location.der
#+end_src

**** With data from the clipboard

#+begin_src sh
  ./target/debug/rclip-client-cli --command WRITE --der-cert-pub pub_key_file_location.der
#+end_src

