#+TITLE: rclip-client README

* What is this?

This module contains both the command-line and graphical clients of =rclip=.
- This has been tested under various Linux distributions, BSD, Mac OS and Windows (10 & 11)
- This is purposedly a minimalistic application, written with the [[https://github.com/fltk-rs/fltk-rs][FLTK toolkit]]

[[./images/screenshot_gui.png]]

* What is required?

- *For execution*:
  - Supported operating systems: Linux, Mac OS, BSD or Windows
  - Linux: Fuse as both the GUI and command-line executables are AppImage binaries
- *For builds*:
  - *Build Tools*: rust compiler toolchain (=1.58+=), cmake, a C and C++ compiler
  - *Tools and Libraries under Linux*:
    - Under Debian-like distributions the following packages are required (=libxcb1-dev=, =libxcb-render0-dev=, =libxcb-shape0-dev=, =libxcb-xfixes0-dev=)
    - For other Linux distributions, the packages might have a sligthly different naming
  - BSD notes: Please note that only the CLI client is available for BSD systems
      

* How to build this?

** MacOS, Linux and Windows

#+begin_src sh
  cargo build
#+end_src

** FreeBSD, NetBSD and OpenBSD

The GUI is not available for BSD operating systems (FLTK UI toolkit compilation issues).

#+begin_src sh
  cargo build --bin rclip-client-cli
#+end_src

* How to run this?

Please refer to the top level folder for desktop or command-line screenshots.

** Desktop user interface

Please execute the rclip-client-gui executable or the native binary for you operating system (i.e. app bundle of Mac OS).

** Command-line user interface

*** Display help

Pass the =--help= flag for an exhaustive list of command-line options

#+begin_src sh
./target/debug/rclip-client-cli --help
#+end_src

*** Read contents from the clipboard server

Without any arguments, the following flags are defaulted.

|-------------+---------------|
| Flag        | Default Value |
|-------------+---------------|
| =--command= | =READ=        |
| =--host=    | =127.0.0.1=   |
| =--port=    | =10080=       |
|-------------+---------------|

#+begin_src sh
./target/debug/rclip-client-cli --der-cert-pub pub_key_file_location.der
#+end_src

*** Write contents to the clipboard server

**** With specific text

#+begin_src sh
  ./target/debug/rclip-client-cli --command WRITE --text new_clipboard_contents --der-cert-pub pub_key_file_location.der
#+end_src

**** With data from the clipboard

#+begin_src sh
  ./target/debug/rclip-client-cli --command WRITE --der-cert-pub pub_key_file_location.der
#+end_src

* How to configure this?

It can become inconvenient to continously provide known command-line or GUI parameters.

*** Optional sample configuration file

The server configuration file name is *config-client.toml*.

#+begin_src conf-toml
  title = "rclip client configuration"

  [server]
  port = 10080
  host = "127.0.0.1"

  [certificate]
  #der-cert-pub = "/home/user/.local/share/rclip/der-cert-pub.der"
#+end_src

/If the public certificate path is not explictly provided, it's resolved from a pre-defined location, per next section/.

*** Configuration data location

Notes:
- Under MacOS and Windows, the configuration file and public certificate reside in the same folder.
- Under Linux/BSD, the config file is under =$XDG_CONFIG_HOME= and the public certificate is under =$XDG_DATA_HOME=.

|------------------+-----------------------------------------------------|
| Operating System | Location                                            |
|------------------+-----------------------------------------------------|
| Under Linux/BSD  | =$XDG_CONFIG_HOME/rclip= and =$XDG_DATA_HOME/rclip= |
| Under MacOS      | =$HOME/Library/Application\ Support/rclip=          |
| Under Windows    | =%APPDATA%\rclip=                                   |
|------------------+-----------------------------------------------------|

